package org.catalan;

import java.util.ArrayList;
import java.util.List;

public class NumberOfBinaryTree {

	public static List<Integer> factorial(int num) {

		List<Integer> il = null;
		if (il == null)
			il = new ArrayList<Integer>();

		il.add(num);
		if (num == 0 | num == 1)
			return il;
		else
			return factorial(num - 1);
	}

	public static int catalan(int n) {
		if (n == 1)
			return 1; // since c(1)=1 is my base case
		else
			n = n - 1;
		return (((2 * n + 2) * (2 * n + 1)) / ((n + 1) * (n + 2))) * catalan(n);
	}

	public static void main(String[] args) {
		/*
		 * Scanner scn = new Scanner(System.in); int T = scn.nextInt(); int[] N
		 * = new int[T]; String[] NOB = new String[T];
		 */
		
		/*List<Integer> li = factorial(100);
		List<Integer> li2 = factorial(200);
		for (int i = 0; i < li2.size(); i++) {
			System.out.println(li.get(i) + "\t" + li2.get(i));
		}*/
		
		System.out.println(catalan(4));
		
	}
}